//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace suber_silk.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="suber_silk_serviceSoap", Namespace="http://tempuri.org/")]
    public partial class suber_silk_service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback insertAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback sellectAllAdminOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public suber_silk_service() {
            this.Url = global::suber_silk.Properties.Settings.Default.suber_silk_localhost_suber_silk_service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event insertAdminCompletedEventHandler insertAdminCompleted;
        
        /// <remarks/>
        public event selectAdminCompletedEventHandler selectAdminCompleted;
        
        /// <remarks/>
        public event updateAdminCompletedEventHandler updateAdminCompleted;
        
        /// <remarks/>
        public event deleteAdminCompletedEventHandler deleteAdminCompleted;
        
        /// <remarks/>
        public event sellectAllAdminCompletedEventHandler sellectAllAdminCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int insertAdmin(string id, string role, string name, string username, string password) {
            object[] results = this.Invoke("insertAdmin", new object[] {
                        id,
                        role,
                        name,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void insertAdminAsync(string id, string role, string name, string username, string password) {
            this.insertAdminAsync(id, role, name, username, password, null);
        }
        
        /// <remarks/>
        public void insertAdminAsync(string id, string role, string name, string username, string password, object userState) {
            if ((this.insertAdminOperationCompleted == null)) {
                this.insertAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertAdminOperationCompleted);
            }
            this.InvokeAsync("insertAdmin", new object[] {
                        id,
                        role,
                        name,
                        username,
                        password}, this.insertAdminOperationCompleted, userState);
        }
        
        private void OninsertAdminOperationCompleted(object arg) {
            if ((this.insertAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertAdminCompleted(this, new insertAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet selectAdmin(string id) {
            object[] results = this.Invoke("selectAdmin", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void selectAdminAsync(string id) {
            this.selectAdminAsync(id, null);
        }
        
        /// <remarks/>
        public void selectAdminAsync(string id, object userState) {
            if ((this.selectAdminOperationCompleted == null)) {
                this.selectAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectAdminOperationCompleted);
            }
            this.InvokeAsync("selectAdmin", new object[] {
                        id}, this.selectAdminOperationCompleted, userState);
        }
        
        private void OnselectAdminOperationCompleted(object arg) {
            if ((this.selectAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectAdminCompleted(this, new selectAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updateAdmin(string name, string username, string password) {
            object[] results = this.Invoke("updateAdmin", new object[] {
                        name,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateAdminAsync(string name, string username, string password) {
            this.updateAdminAsync(name, username, password, null);
        }
        
        /// <remarks/>
        public void updateAdminAsync(string name, string username, string password, object userState) {
            if ((this.updateAdminOperationCompleted == null)) {
                this.updateAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAdminOperationCompleted);
            }
            this.InvokeAsync("updateAdmin", new object[] {
                        name,
                        username,
                        password}, this.updateAdminOperationCompleted, userState);
        }
        
        private void OnupdateAdminOperationCompleted(object arg) {
            if ((this.updateAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateAdminCompleted(this, new updateAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int deleteAdmin(string id) {
            object[] results = this.Invoke("deleteAdmin", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAdminAsync(string id) {
            this.deleteAdminAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteAdminAsync(string id, object userState) {
            if ((this.deleteAdminOperationCompleted == null)) {
                this.deleteAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAdminOperationCompleted);
            }
            this.InvokeAsync("deleteAdmin", new object[] {
                        id}, this.deleteAdminOperationCompleted, userState);
        }
        
        private void OndeleteAdminOperationCompleted(object arg) {
            if ((this.deleteAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAdminCompleted(this, new deleteAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sellectAllAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet sellectAllAdmin() {
            object[] results = this.Invoke("sellectAllAdmin", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void sellectAllAdminAsync() {
            this.sellectAllAdminAsync(null);
        }
        
        /// <remarks/>
        public void sellectAllAdminAsync(object userState) {
            if ((this.sellectAllAdminOperationCompleted == null)) {
                this.sellectAllAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsellectAllAdminOperationCompleted);
            }
            this.InvokeAsync("sellectAllAdmin", new object[0], this.sellectAllAdminOperationCompleted, userState);
        }
        
        private void OnsellectAllAdminOperationCompleted(object arg) {
            if ((this.sellectAllAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sellectAllAdminCompleted(this, new sellectAllAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void insertAdminCompletedEventHandler(object sender, insertAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void selectAdminCompletedEventHandler(object sender, selectAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void updateAdminCompletedEventHandler(object sender, updateAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteAdminCompletedEventHandler(object sender, deleteAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sellectAllAdminCompletedEventHandler(object sender, sellectAllAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sellectAllAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sellectAllAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591