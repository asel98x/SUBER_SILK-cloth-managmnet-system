//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace suber_silk.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.suber_silk_serviceSoap")]
    public interface suber_silk_serviceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertAdmin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertAdmin(string role, string name, string username, string password, string time, string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertAdmin", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertAdminAsync(string role, string name, string username, string password, string time, string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/selectAdmin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet selectAdmin(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/selectAdmin", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> selectAdminAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateAdmin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updateAdmin(string name, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateAdmin", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateAdminAsync(string name, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteAdmin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int deleteAdmin(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteAdmin", ReplyAction="*")]
        System.Threading.Tasks.Task<int> deleteAdminAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sellectAllAdmin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet sellectAllAdmin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sellectAllAdmin", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> sellectAllAdminAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertClient(string role, string name, string address, int mobile, string nic, string birthday, string email, int age, string username, string password, string time, string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertClient", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertClientAsync(string role, string name, string address, int mobile, string nic, string birthday, string email, int age, string username, string password, string time, string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/selectClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet selectClient(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/selectClient", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> selectClientAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updateClient(string name, string address, int mobile, string nic, string birthday, string email, int age, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateClient", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateClientAsync(string name, string address, int mobile, string nic, string birthday, string email, int age, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int deleteClient(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteClient", ReplyAction="*")]
        System.Threading.Tasks.Task<int> deleteClientAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sellectAllClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet sellectAllClient();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sellectAllClient", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> sellectAllClientAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_client_details", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_client_details(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_client_details", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_client_detailsAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertMaterial", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertMaterial(string material, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertMaterial", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertMaterialAsync(string material, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/selectMaterial", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet selectMaterial(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/selectMaterial", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> selectMaterialAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateMaterial", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updateMaterial(string material, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateMaterial", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateMaterialAsync(string material, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteMaterial", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int deleteMaterial(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteMaterial", ReplyAction="*")]
        System.Threading.Tasks.Task<int> deleteMaterialAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sellectAllMaterial", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet sellectAllMaterial();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sellectAllMaterial", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> sellectAllMaterialAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_all_materials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet get_all_materials();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/get_all_materials", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> get_all_materialsAsync();
        
        // CODEGEN: Parameter 'image' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertStock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        suber_silk.ServiceReference1.insertStockResponse insertStock(suber_silk.ServiceReference1.insertStockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertStock", ReplyAction="*")]
        System.Threading.Tasks.Task<suber_silk.ServiceReference1.insertStockResponse> insertStockAsync(suber_silk.ServiceReference1.insertStockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/selectStock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet selectStock(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/selectStock", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> selectStockAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteStock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int deleteStock(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteStock", ReplyAction="*")]
        System.Threading.Tasks.Task<int> deleteStockAsync(string id);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="insertStock", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class insertStockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string category;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] image;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int quantity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public double price;
        
        public insertStockRequest() {
        }
        
        public insertStockRequest(string category, string name, byte[] image, string description, int quantity, double price) {
            this.category = category;
            this.name = name;
            this.image = image;
            this.description = description;
            this.quantity = quantity;
            this.price = price;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="insertStockResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class insertStockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int insertStockResult;
        
        public insertStockResponse() {
        }
        
        public insertStockResponse(int insertStockResult) {
            this.insertStockResult = insertStockResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface suber_silk_serviceSoapChannel : suber_silk.ServiceReference1.suber_silk_serviceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class suber_silk_serviceSoapClient : System.ServiceModel.ClientBase<suber_silk.ServiceReference1.suber_silk_serviceSoap>, suber_silk.ServiceReference1.suber_silk_serviceSoap {
        
        public suber_silk_serviceSoapClient() {
        }
        
        public suber_silk_serviceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public suber_silk_serviceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public suber_silk_serviceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public suber_silk_serviceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int insertAdmin(string role, string name, string username, string password, string time, string date) {
            return base.Channel.insertAdmin(role, name, username, password, time, date);
        }
        
        public System.Threading.Tasks.Task<int> insertAdminAsync(string role, string name, string username, string password, string time, string date) {
            return base.Channel.insertAdminAsync(role, name, username, password, time, date);
        }
        
        public System.Data.DataSet selectAdmin(string id) {
            return base.Channel.selectAdmin(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> selectAdminAsync(string id) {
            return base.Channel.selectAdminAsync(id);
        }
        
        public int updateAdmin(string name, string username, string password) {
            return base.Channel.updateAdmin(name, username, password);
        }
        
        public System.Threading.Tasks.Task<int> updateAdminAsync(string name, string username, string password) {
            return base.Channel.updateAdminAsync(name, username, password);
        }
        
        public int deleteAdmin(string id) {
            return base.Channel.deleteAdmin(id);
        }
        
        public System.Threading.Tasks.Task<int> deleteAdminAsync(string id) {
            return base.Channel.deleteAdminAsync(id);
        }
        
        public System.Data.DataSet sellectAllAdmin() {
            return base.Channel.sellectAllAdmin();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> sellectAllAdminAsync() {
            return base.Channel.sellectAllAdminAsync();
        }
        
        public int insertClient(string role, string name, string address, int mobile, string nic, string birthday, string email, int age, string username, string password, string time, string date) {
            return base.Channel.insertClient(role, name, address, mobile, nic, birthday, email, age, username, password, time, date);
        }
        
        public System.Threading.Tasks.Task<int> insertClientAsync(string role, string name, string address, int mobile, string nic, string birthday, string email, int age, string username, string password, string time, string date) {
            return base.Channel.insertClientAsync(role, name, address, mobile, nic, birthday, email, age, username, password, time, date);
        }
        
        public System.Data.DataSet selectClient(string id) {
            return base.Channel.selectClient(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> selectClientAsync(string id) {
            return base.Channel.selectClientAsync(id);
        }
        
        public int updateClient(string name, string address, int mobile, string nic, string birthday, string email, int age, string username, string password) {
            return base.Channel.updateClient(name, address, mobile, nic, birthday, email, age, username, password);
        }
        
        public System.Threading.Tasks.Task<int> updateClientAsync(string name, string address, int mobile, string nic, string birthday, string email, int age, string username, string password) {
            return base.Channel.updateClientAsync(name, address, mobile, nic, birthday, email, age, username, password);
        }
        
        public int deleteClient(string id) {
            return base.Channel.deleteClient(id);
        }
        
        public System.Threading.Tasks.Task<int> deleteClientAsync(string id) {
            return base.Channel.deleteClientAsync(id);
        }
        
        public System.Data.DataSet sellectAllClient() {
            return base.Channel.sellectAllClient();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> sellectAllClientAsync() {
            return base.Channel.sellectAllClientAsync();
        }
        
        public System.Data.DataSet get_client_details(string id) {
            return base.Channel.get_client_details(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_client_detailsAsync(string id) {
            return base.Channel.get_client_detailsAsync(id);
        }
        
        public int insertMaterial(string material, string description) {
            return base.Channel.insertMaterial(material, description);
        }
        
        public System.Threading.Tasks.Task<int> insertMaterialAsync(string material, string description) {
            return base.Channel.insertMaterialAsync(material, description);
        }
        
        public System.Data.DataSet selectMaterial(string id) {
            return base.Channel.selectMaterial(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> selectMaterialAsync(string id) {
            return base.Channel.selectMaterialAsync(id);
        }
        
        public int updateMaterial(string material, string description) {
            return base.Channel.updateMaterial(material, description);
        }
        
        public System.Threading.Tasks.Task<int> updateMaterialAsync(string material, string description) {
            return base.Channel.updateMaterialAsync(material, description);
        }
        
        public int deleteMaterial(string id) {
            return base.Channel.deleteMaterial(id);
        }
        
        public System.Threading.Tasks.Task<int> deleteMaterialAsync(string id) {
            return base.Channel.deleteMaterialAsync(id);
        }
        
        public System.Data.DataSet sellectAllMaterial() {
            return base.Channel.sellectAllMaterial();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> sellectAllMaterialAsync() {
            return base.Channel.sellectAllMaterialAsync();
        }
        
        public System.Data.DataSet get_all_materials() {
            return base.Channel.get_all_materials();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> get_all_materialsAsync() {
            return base.Channel.get_all_materialsAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        suber_silk.ServiceReference1.insertStockResponse suber_silk.ServiceReference1.suber_silk_serviceSoap.insertStock(suber_silk.ServiceReference1.insertStockRequest request) {
            return base.Channel.insertStock(request);
        }
        
        public int insertStock(string category, string name, byte[] image, string description, int quantity, double price) {
            suber_silk.ServiceReference1.insertStockRequest inValue = new suber_silk.ServiceReference1.insertStockRequest();
            inValue.category = category;
            inValue.name = name;
            inValue.image = image;
            inValue.description = description;
            inValue.quantity = quantity;
            inValue.price = price;
            suber_silk.ServiceReference1.insertStockResponse retVal = ((suber_silk.ServiceReference1.suber_silk_serviceSoap)(this)).insertStock(inValue);
            return retVal.insertStockResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<suber_silk.ServiceReference1.insertStockResponse> suber_silk.ServiceReference1.suber_silk_serviceSoap.insertStockAsync(suber_silk.ServiceReference1.insertStockRequest request) {
            return base.Channel.insertStockAsync(request);
        }
        
        public System.Threading.Tasks.Task<suber_silk.ServiceReference1.insertStockResponse> insertStockAsync(string category, string name, byte[] image, string description, int quantity, double price) {
            suber_silk.ServiceReference1.insertStockRequest inValue = new suber_silk.ServiceReference1.insertStockRequest();
            inValue.category = category;
            inValue.name = name;
            inValue.image = image;
            inValue.description = description;
            inValue.quantity = quantity;
            inValue.price = price;
            return ((suber_silk.ServiceReference1.suber_silk_serviceSoap)(this)).insertStockAsync(inValue);
        }
        
        public System.Data.DataSet selectStock(string id) {
            return base.Channel.selectStock(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> selectStockAsync(string id) {
            return base.Channel.selectStockAsync(id);
        }
        
        public int deleteStock(string id) {
            return base.Channel.deleteStock(id);
        }
        
        public System.Threading.Tasks.Task<int> deleteStockAsync(string id) {
            return base.Channel.deleteStockAsync(id);
        }
    }
}
